{"version":3,"sources":["nav.js","select.js"],"names":["header","document","querySelector","headerHeight","clientHeight","intro","anchors","querySelectorAll","navAnchors","burger","nav","burgerOpenClass","navOpenClass","currentLinkClass","setPaddingTop","paddingTop","offsetHeight","parseInt","style","debounce","fn","delay","timeoutId","args","clearTimeout","setTimeout","apply","this","addEventListener","window","event","classList","contains","targetElement","target","remove","scrollSetCurrentLink","scrollPosition","forEach","element","hash","section","sectionPosition","offsetTop","sectionHeight","add","scrollY","preventDefault","documentElement","scrollTo","top","behavior","e","toggle","choices","Choices","searchEnabled","itemSelectText","shouldSort","shouldSortItems"],"mappings":"AAAA,MAAAA,OAAAC,SAAAC,cAAA,UACA,IAAAC,aAAAH,OAAAI,aACA,MAAAC,MAAAJ,SAAAC,cAAA,UAEAI,QAAAL,SAAAM,iBAAA,gBACAC,WAAAP,SAAAM,iBAAA,0BAGAE,OAAAR,SAAAC,cAAA,wBACAQ,IAAAT,SAAAC,cAAA,aAEAS,gBAAA,4BACAC,aAAA,iBAEAC,iBAAA,0BAGAC,cAAA,KACA,GAAAd,QAAAK,MAAA,CACA,IAAAU,EAAAf,OAAAgB,aAGAD,GAFAE,SAAAZ,MAAAa,MAAAH,WAAA,KAAA,KAGAV,MAAAa,MAAAH,WAAA,GAAAA,MAEA,GAIAI,SAAA,CAAAC,EAAAC,KACA,IAAAC,EACA,MAAA,IAAAC,KACAC,aAAAF,GACAA,EAAAG,YAAA,IAAAL,EAAAM,MAAAC,KAAAJ,IAAAF,EAAA,CACA,EAGApB,SAAA2B,iBAAA,mBAAAd,eACAe,OAAAD,iBAAA,SAAAT,SAAAL,cAAA,MAIAb,SAAA2B,iBAAA,SAAAE,IACA,GAAApB,IAAAqB,UAAAC,SAAApB,cAAA,CACA,MAAAqB,EAAAH,EAAAI,OACAlC,OAAAgC,SAAAC,KAGAxB,OAAAsB,UAAAI,OAAAxB,iBACAD,IAAAqB,UAAAI,OAAAvB,cAEA,KAKA,MAAAwB,qBAAA,CAAAC,EAAAxB,KACAL,WAAA8B,SAAAC,IACA,GAAAA,EAAAC,KAAA,CACA,MAAAC,EAAAxC,SAAAC,cAAAqC,EAAAC,MACA,GAAAC,EAAA,CACA,MAAAC,EAAAD,EAAAE,UACAC,EAAAH,EAAAzB,aAEAqB,GAAAK,GAAAL,EAAAK,EAAAE,EACAL,EAAAR,UAAAc,IAAAhC,GAEA0B,EAAAR,UAAAI,OAAAtB,EAEA,CACA,IACA,EAIAZ,SAAA2B,iBAAA,UAAA,KACA,IAAAS,EAAAR,OAAAiB,QACAV,qBAAAC,EAAAxB,kBACAwB,EAAAlC,aACAH,OAAA+B,UAAAc,IAAA,uBAEA7C,OAAA+B,UAAAI,OAAA,sBACA,IAKA7B,QAAAgC,SAAAC,IACAA,EAAAX,iBAAA,SAAAE,IAEA,GADAA,EAAAiB,iBACAR,EAAAC,KAAA,CACA,MAAAC,EAAAxC,SAAAC,cAAAqC,EAAAC,MACAC,IACA,mBAAAxC,SAAA+C,gBAAA9B,MACAW,OAAAoB,SAAA,CACAC,IAAAT,EAAAE,UACAQ,SAAA,WAGAtB,OAAAoB,SAAA,CACAC,IAAAT,EAAAE,UACAQ,SAAA,SAIA,IACA,IAKA1C,OAAAmB,iBAAA,SAAAwB,IACAA,EAAAL,iBACAtC,OAAAsB,UAAAsB,OAAA1C,iBACAD,IAAAqB,UAAAsB,OAAAzC,aAAA,IClHA,MAAA2B,QAAAtC,SAAAC,cAAA,cACAoD,QAAA,IAAAC,QAAAhB,QAAA,CACAiB,eAAA,EACAC,eAAA,GACAC,YAAA,EACAC,iBAAA","file":"main.min.js","sourcesContent":["const header = document.querySelector(\"header\");\nlet headerHeight = header.clientHeight;\nconst intro = document.querySelector(\".intro\");\n\nconst anchors = document.querySelectorAll('a[href^=\"#\"]');\nconst navAnchors = document.querySelectorAll('.main-nav a[href^=\"#\"]');\n\n\nconst burger = document.querySelector(\".page-header__burger\");\nconst nav = document.querySelector(\".main-nav\");\n\nconst burgerOpenClass = \"page-header__burger--open\";\nconst navOpenClass = \"main-nav--open\";\n\nconst currentLinkClass = \"main-nav__link--current\";\n\n// Динамический отступ от хедера\nconst setPaddingTop = () => {\n  if (header && intro) {\n    let paddingTop = header.offsetHeight;\n    let currentPaddingTop = parseInt(intro.style.paddingTop, 10) || 0;\n\n    if (paddingTop > currentPaddingTop) {    // Проверка, чтобы при резайзе оставался наибольший паддинг.\n      intro.style.paddingTop = `${paddingTop}px`;\n    }\n  }\n};\n\n// Функция задержки для ограничения частоты вызова\nconst debounce = (fn, delay) => {\n  let timeoutId;\n  return (...args) => {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => fn.apply(this, args), delay);\n  };\n};\n\ndocument.addEventListener(\"DOMContentLoaded\", setPaddingTop);\nwindow.addEventListener(\"resize\", debounce(setPaddingTop, 100));\n\n\n\ndocument.addEventListener('click', (event) => {\n  if (nav.classList.contains(navOpenClass)) {\n    const targetElement = event.target;\n    const isHeaderClicked = header.contains(targetElement);\n\n    if (!isHeaderClicked) {\n      burger.classList.remove(burgerOpenClass);\n      nav.classList.remove(navOpenClass);\n    }\n  }\n});\n\n\n// Переход по якорям при скролле\nconst scrollSetCurrentLink = (scrollPosition, currentLinkClass) => {\n  navAnchors.forEach(element => {\n    if (element.hash) {\n      const section = document.querySelector(element.hash);\n      if (section) {\n        const sectionPosition = section.offsetTop;\n        const sectionHeight = section.offsetHeight;\n\n        if (scrollPosition >= sectionPosition && scrollPosition < sectionPosition + sectionHeight) {\n          element.classList.add(currentLinkClass);\n        } else {\n          element.classList.remove(currentLinkClass);\n        }\n      }\n    }\n  });\n}\n\n\ndocument.addEventListener('scroll', () => {\n  let scrollPosition = window.scrollY;\n  scrollSetCurrentLink(scrollPosition, currentLinkClass);\n  if (scrollPosition > headerHeight) {\n    header.classList.add(\"page-header--scroll\");\n  } else {\n    header.classList.remove(\"page-header--scroll\");\n  }\n});\n\n\n// Переход по якорям при клике\nanchors.forEach(element => {\n  element.addEventListener(\"click\", (event) => {\n    event.preventDefault();\n    if (element.hash) {\n      const section = document.querySelector(element.hash);\n      if (section) {\n        if (\"scrollBehavior\" in document.documentElement.style) {\n          window.scrollTo({\n            top: section.offsetTop,\n            behavior: 'smooth'\n          });\n        } else {\n          window.scrollTo({\n            top: section.offsetTop,\n            behavior: 'auto'\n          });\n        }\n      }\n    }\n  });\n});\n\n\n// Бургер\nburger.addEventListener(\"click\", (e) => {\n  e.preventDefault();\n  burger.classList.toggle(burgerOpenClass);\n  nav.classList.toggle(navOpenClass);\n});\n\n\n","const element = document.querySelector('.js-choice');\nconst choices = new Choices(element, {\n  searchEnabled: false,\n  itemSelectText: '',\n  shouldSort: false,\n  shouldSortItems: false\n});\n"]}